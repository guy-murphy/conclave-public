/* Generated By: CSCC: 4.0 (03/25/2012)  Do not edit this line. WikiParser.cs */
namespace Conclave.Parsing.Wiki{



using Conclave;
using Conclave.Parsing.Model;

public class WikiParser : WikiParserConstants {

        private WikiElement _root;
        private WikiElement _current;

        public WikiElement Root {
                get { return _root; }
        }

        public WikiElement Current {
                get { return _current; }
        }

        //public WikiParser (String text): this(new StringReader(text) {
        //}

        public WikiElement PushElement(WikiElement element) {
                if (element == null) throw new ArgumentNullException("element");

                WikiElement newCurrent = element;
                if (_root == null) {
                        _root = element;
                } else {
                        newCurrent = _current.AddElement(element);
                }
                element.Parent = _current;
                _current = newCurrent;
                return element;
        }

        public WikiElement PopElement() {
                WikiElement result = _current;
                _current = _current.Parent;
                return result;
        }

        public WikiElement PushSibling(WikiElement element) {
                this.PopElement();
                this.PushElement(element);
                return element;
        }

        public WikiElement AddChildElement(WikiElement element) {
                _current.AddChild(element);
                return element;
        }

  public void wiki() {
                this.pushElement(new DocumentElement());
    while (true) {
      if (jj_2_1(5)) {
        ;
      } else {
        goto label_1;
      }
      if (jj_2_2(5)) {
        blocks();
      } else if (jj_2_3(5)) {
        heading();
      } else if (jj_2_4(5)) {
        list();
      } else if (jj_2_5(5)) {
        empty_line();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
    }
    label_1: ;
    
  }

  public void line() {
        Token t = null;
                if (token_source.curLexState == WikiParserConstants.IN_TABLE)
                {
                        this.pushElement(new TableRowElement());
                }
                else
                {
                        this.pushElement(new LineElement());
                }
    content();
    if (jj_2_6(5)) {
      new_line();
    } else if (jj_2_7(5)) {
      jj_consume_token(0);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                if (token_source.curLexState == WikiParserConstants.IN_TABLE)
                {
                        ((TableRowElement)this.getCurrent()).parse();
                }
                this.popElement();
  }

  public void code_line() {
        Token t = null;
                this.pushElement(new LineElement());
    code_text();
    if (jj_2_8(5)) {
      new_line();
    } else if (jj_2_9(5)) {
      jj_consume_token(0);
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
                this.popElement();
  }

  public void box() {
                this.pushElement(new BoxElement());
    jj_consume_token(OPEN_BLOCK_BOX);
    box_content();
    jj_consume_token(CLOSE_BLOCK_BOX);
                this.popElement();
  }

  public void code() {
        this.pushElement(new CodeElement());
    jj_consume_token(OPEN_BLOCK_CODE);
    code_content();
    jj_consume_token(CLOSE_BLOCK_CODE);
    this.popElement();
  }

  public void table() {
                this.pushElement(new TableElement());
    jj_consume_token(OPEN_BLOCK_TABLE);
    block_content();
    jj_consume_token(CLOSE_BLOCK_TABLE);
                this.popElement();
  }

  public void block_quote() {
                this.pushElement(new BlockQuoteElement());
    jj_consume_token(OPEN_BLOCK_QUOTE);
    box_content();
    jj_consume_token(CLOSE_BLOCK_QUOTE);
                this.popElement();
  }

  public void form() {
                System.out.print("<form>\n");
    jj_consume_token(OPEN_BLOCK_FORM);
    block_content();
    jj_consume_token(CLOSE_BLOCK_FORM);
                System.out.print("</form>\n");
  }

  public void block() {
                this.pushElement(new BlockElement());
    block_content();
                this.popElement();
  }

  public void block_content() {
    if (jj_2_10(5)) {
      block_title();
    } else {
      ;
    }
    while (true) {
      line();
      if (jj_2_11(5)) {
        ;
      } else {
        goto label_2;
      }
    }
    label_2: ;
    
  }

  public void box_content() {
    if (jj_2_12(5)) {
      block_title();
    } else {
      ;
    }
    while (true) {
      if (jj_2_13(5)) {
        line();
      } else if (jj_2_14(5)) {
        empty_line();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_15(5)) {
        ;
      } else {
        goto label_3;
      }
    }
    label_3: ;
    
  }

  public void code_content() {
    if (jj_2_16(5)) {
      block_title();
    } else {
      ;
    }
    while (true) {
      if (jj_2_17(5)) {
        code_line();
      } else if (jj_2_18(5)) {
        empty_line();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_19(5)) {
        ;
      } else {
        goto label_4;
      }
    }
    label_4: ;
    
  }

  public void block_title() {
        Token t = null;

    t = jj_consume_token(BLOCK_TITLE);
                this.addChildElement(new TitleElement(t.image));
  }

  public void blocks() {
    if (jj_2_20(5)) {
      code();
    } else if (jj_2_21(5)) {
      block();
    } else if (jj_2_22(5)) {
      block_quote();
    } else if (jj_2_23(5)) {
      table();
    } else if (jj_2_24(5)) {
      box();
    } else if (jj_2_25(5)) {
      form();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  public void empty_line() {
    while (true) {
      if (jj_2_26(5)) {
        ;
      } else {
        goto label_5;
      }
      whitespace();
    }
    label_5: ;
    
    new_line();
                this.addChildElement(new EmptyLineElement());
  }

  public void whitespace() {
        Token t = null;
    t = jj_consume_token(WS);
                this.addChildElement(new WhitespaceElement(t.image));
  }

  public void new_line() {
    jj_consume_token(NL);

  }

  public void list() {
                this.pushElement(new ListElement());
    while (true) {
      if (jj_2_27(5)) {
        list_item1();
      } else if (jj_2_28(5)) {
        list_item2();
      } else if (jj_2_29(5)) {
        list_item3();
      } else if (jj_2_30(5)) {
        list_item4();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_31(5)) {
        ;
      } else {
        goto label_6;
      }
    }
    label_6: ;
    
                ((ListElement)this.getCurrent()).postProcess();
                this.popElement();
  }

  public void list_item1() {
                ListItemElement li = new ListItemElement();
                li.setLevel(0);
                this.pushElement(li);
    jj_consume_token(MULTIPLY);
    content();
    jj_consume_token(NL);
                this.popElement();
  }

  public void list_item2() {
                ListItemElement li = new ListItemElement();
                li.setLevel(1);
                this.pushElement(li);
    jj_consume_token(MULTIPLY);
    jj_consume_token(MULTIPLY);
    content();
    jj_consume_token(NL);
                this.popElement();
  }

  public void list_item3() {
                ListItemElement li = new ListItemElement();
                li.setLevel(2);
                this.pushElement(li);
    jj_consume_token(MULTIPLY);
    jj_consume_token(MULTIPLY);
    jj_consume_token(MULTIPLY);
    content();
    jj_consume_token(NL);
                this.popElement();
  }

  public void list_item4() {
                ListItemElement li = new ListItemElement();
                li.setLevel(3);
                this.pushElement(li);
    jj_consume_token(MULTIPLY);
    jj_consume_token(MULTIPLY);
    jj_consume_token(MULTIPLY);
    jj_consume_token(MULTIPLY);
    content();
    jj_consume_token(NL);
                this.popElement();
  }

  public void link() {
        Token t = null;

    t = jj_consume_token(LINK);
                this.addChildElement(new LinkElement(t.image));
  }

  public void topic_link() {
        Token t = null;

    t = jj_consume_token(TOPIC_LINK);
                this.addChildElement(new LinkElement(t.image));
  }

  public void safe_text() {
        Token t = null;
    t = jj_consume_token(SAFE_TEXT);
                this.addChildElement(new TextElement(t.image));
  }

  public void code_text() {
        Token t = null;
    t = jj_consume_token(CODE_TEXT);
                this.addChildElement(new TextElement(t.image));
  }

  public void emphasis() {
                this.pushElement(new EmphasisElement());
    jj_consume_token(HAT);
    while (true) {
      if (jj_2_32(5)) {
        bold();
      } else if (jj_2_33(5)) {
        link();
      } else if (jj_2_34(5)) {
        url();
      } else if (jj_2_35(5)) {
        safe_text();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_36(5)) {
        ;
      } else {
        goto label_7;
      }
    }
    label_7: ;
    
    jj_consume_token(HAT);
                this.popElement();
  }

  public void bold() {
                this.pushElement(new StrongElement());
    jj_consume_token(MULTIPLY);
    while (true) {
      if (jj_2_37(5)) {
        emphasis();
      } else if (jj_2_38(5)) {
        links();
      } else if (jj_2_39(5)) {
        url();
      } else if (jj_2_40(5)) {
        safe_text();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_41(5)) {
        ;
      } else {
        goto label_8;
      }
    }
    label_8: ;
    
    jj_consume_token(MULTIPLY);
                this.popElement();
  }

  public void inline_code() {
    this.pushElement(new InlineCodeElement());
    jj_consume_token(ACUTE);
    while (true) {
      if (jj_2_42(5)) {
        emphasis();
      } else if (jj_2_43(5)) {
        links();
      } else if (jj_2_44(5)) {
        url();
      } else if (jj_2_45(5)) {
        safe_text();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_46(5)) {
        ;
      } else {
        goto label_9;
      }
    }
    label_9: ;
    
    jj_consume_token(ACUTE);
    this.popElement();
  }

  public void url() {
        // wont ever match
        Token t = null;

    t = jj_consume_token(URL);

  }

  public void links() {
    if (jj_2_47(5)) {
      link();
    } else if (jj_2_48(5)) {
      topic_link();
    } else if (jj_2_49(5)) {
      url();
    } else {
      jj_consume_token(-1);
      throw new ParseException();
    }
  }

  public void content() {
    while (true) {
      if (jj_2_50(5)) {
        markup();
      } else if (jj_2_51(5)) {
        inline_code();
      } else if (jj_2_52(5)) {
        links();
      } else if (jj_2_53(5)) {
        bold();
      } else if (jj_2_54(5)) {
        emphasis();
      } else if (jj_2_55(5)) {
        safe_text();
      } else if (jj_2_56(5)) {
        whitespace();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_57(5)) {
        ;
      } else {
        goto label_10;
      }
    }
    label_10: ;
    
  }

  public void markup() {
    while (true) {
      if (jj_2_58(5)) {
        lt();
      } else if (jj_2_59(5)) {
        gt();
      } else {
        jj_consume_token(-1);
        throw new ParseException();
      }
      if (jj_2_60(5)) {
        ;
      } else {
        goto label_11;
      }
    }
    label_11: ;
    
  }

  public void lt() {
    jj_consume_token(LT);
    this.addChildElement(new TextElement("&lt;"));
  }

  public void gt() {
    jj_consume_token(GT);
    this.addChildElement(new TextElement("&gt;"));
  }

  public void heading() {
        Token open = null;
        Token close = null;
    open = jj_consume_token(OPEN_HEADING);
                this.pushElement(new HeadingElement(open.image.length()));
    safe_text();
    close = jj_consume_token(CLOSE_HEADING);
                this.popElement();
    new_line();
  }

  private bool jj_2_1(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_1(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(0, xla); }
  }

  private bool jj_2_2(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_2(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(1, xla); }
  }

  private bool jj_2_3(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_3(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(2, xla); }
  }

  private bool jj_2_4(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_4(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(3, xla); }
  }

  private bool jj_2_5(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_5(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(4, xla); }
  }

  private bool jj_2_6(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_6(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(5, xla); }
  }

  private bool jj_2_7(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_7(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(6, xla); }
  }

  private bool jj_2_8(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_8(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(7, xla); }
  }

  private bool jj_2_9(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_9(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(8, xla); }
  }

  private bool jj_2_10(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_10(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(9, xla); }
  }

  private bool jj_2_11(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_11(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(10, xla); }
  }

  private bool jj_2_12(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_12(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(11, xla); }
  }

  private bool jj_2_13(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_13(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(12, xla); }
  }

  private bool jj_2_14(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_14(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(13, xla); }
  }

  private bool jj_2_15(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_15(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(14, xla); }
  }

  private bool jj_2_16(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_16(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(15, xla); }
  }

  private bool jj_2_17(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_17(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(16, xla); }
  }

  private bool jj_2_18(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_18(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(17, xla); }
  }

  private bool jj_2_19(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_19(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(18, xla); }
  }

  private bool jj_2_20(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_20(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(19, xla); }
  }

  private bool jj_2_21(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_21(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(20, xla); }
  }

  private bool jj_2_22(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_22(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(21, xla); }
  }

  private bool jj_2_23(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_23(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(22, xla); }
  }

  private bool jj_2_24(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_24(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(23, xla); }
  }

  private bool jj_2_25(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_25(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(24, xla); }
  }

  private bool jj_2_26(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_26(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(25, xla); }
  }

  private bool jj_2_27(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_27(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(26, xla); }
  }

  private bool jj_2_28(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_28(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(27, xla); }
  }

  private bool jj_2_29(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_29(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(28, xla); }
  }

  private bool jj_2_30(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_30(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(29, xla); }
  }

  private bool jj_2_31(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_31(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(30, xla); }
  }

  private bool jj_2_32(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_32(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(31, xla); }
  }

  private bool jj_2_33(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_33(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(32, xla); }
  }

  private bool jj_2_34(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_34(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(33, xla); }
  }

  private bool jj_2_35(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_35(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(34, xla); }
  }

  private bool jj_2_36(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_36(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(35, xla); }
  }

  private bool jj_2_37(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_37(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(36, xla); }
  }

  private bool jj_2_38(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_38(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(37, xla); }
  }

  private bool jj_2_39(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_39(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(38, xla); }
  }

  private bool jj_2_40(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_40(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(39, xla); }
  }

  private bool jj_2_41(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_41(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(40, xla); }
  }

  private bool jj_2_42(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_42(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(41, xla); }
  }

  private bool jj_2_43(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_43(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(42, xla); }
  }

  private bool jj_2_44(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_44(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(43, xla); }
  }

  private bool jj_2_45(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_45(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(44, xla); }
  }

  private bool jj_2_46(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_46(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(45, xla); }
  }

  private bool jj_2_47(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_47(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(46, xla); }
  }

  private bool jj_2_48(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_48(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(47, xla); }
  }

  private bool jj_2_49(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_49(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(48, xla); }
  }

  private bool jj_2_50(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_50(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(49, xla); }
  }

  private bool jj_2_51(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_51(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(50, xla); }
  }

  private bool jj_2_52(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_52(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(51, xla); }
  }

  private bool jj_2_53(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_53(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(52, xla); }
  }

  private bool jj_2_54(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_54(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(53, xla); }
  }

  private bool jj_2_55(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_55(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(54, xla); }
  }

  private bool jj_2_56(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_56(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(55, xla); }
  }

  private bool jj_2_57(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_57(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(56, xla); }
  }

  private bool jj_2_58(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_58(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(57, xla); }
  }

  private bool jj_2_59(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_59(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(58, xla); }
  }

  private bool jj_2_60(int xla) {
    jj_la = xla; jj_lastpos = jj_scanpos = token;
    try { return !jj_3_60(); }
    catch(LookaheadSuccess ls) { return true; }
    finally { jj_save(59, xla); }
  }

  private bool jj_3R_18() {
    if (jj_3R_42()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_6()) {
    jj_scanpos = xsp;
    if (jj_3_7()) return true;
    }
    return false;
  }

  private bool jj_3_23() {
    if (jj_3R_23()) return true;
    return false;
  }

  private bool jj_3_5() {
    if (jj_3R_15()) return true;
    return false;
  }

  private bool jj_3_40() {
    if (jj_3R_34()) return true;
    return false;
  }

  private bool jj_3_4() {
    if (jj_3R_14()) return true;
    return false;
  }

  private bool jj_3_3() {
    if (jj_3R_13()) return true;
    return false;
  }

  private bool jj_3_2() {
    if (jj_3R_12()) return true;
    return false;
  }

  private bool jj_3_1() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_2()) {
    jj_scanpos = xsp;
    if (jj_3_3()) {
    jj_scanpos = xsp;
    if (jj_3_4()) {
    jj_scanpos = xsp;
    if (jj_3_5()) return true;
    }
    }
    }
    return false;
  }

  private bool jj_3_44() {
    if (jj_3R_33()) return true;
    return false;
  }

  private bool jj_3_39() {
    if (jj_3R_33()) return true;
    return false;
  }

  private bool jj_3R_26() {
    if (jj_scan_token(WS)) return true;
    return false;
  }

  private bool jj_3R_33() {
    if (jj_scan_token(URL)) return true;
    return false;
  }

  private bool jj_3_43() {
    if (jj_3R_36()) return true;
    return false;
  }

  private bool jj_3_22() {
    if (jj_3R_22()) return true;
    return false;
  }

  private bool jj_3_38() {
    if (jj_3R_36()) return true;
    return false;
  }

  private bool jj_3_26() {
    if (jj_3R_26()) return true;
    return false;
  }

  private bool jj_3R_15() {
    Token xsp;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_26()) { jj_scanpos = xsp; break; }
    }
    if (jj_3R_16()) return true;
    return false;
  }

  private bool jj_3_21() {
    if (jj_3R_21()) return true;
    return false;
  }

  private bool jj_3_42() {
    if (jj_3R_35()) return true;
    return false;
  }

  private bool jj_3_46() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_42()) {
    jj_scanpos = xsp;
    if (jj_3_43()) {
    jj_scanpos = xsp;
    if (jj_3_44()) {
    jj_scanpos = xsp;
    if (jj_3_45()) return true;
    }
    }
    }
    return false;
  }

  private bool jj_3_35() {
    if (jj_3R_34()) return true;
    return false;
  }

  private bool jj_3_18() {
    if (jj_3R_15()) return true;
    return false;
  }

  private bool jj_3_37() {
    if (jj_3R_35()) return true;
    return false;
  }

  private bool jj_3_41() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_37()) {
    jj_scanpos = xsp;
    if (jj_3_38()) {
    jj_scanpos = xsp;
    if (jj_3_39()) {
    jj_scanpos = xsp;
    if (jj_3_40()) return true;
    }
    }
    }
    return false;
  }

  private bool jj_3_20() {
    if (jj_3R_20()) return true;
    return false;
  }

  private bool jj_3R_12() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_20()) {
    jj_scanpos = xsp;
    if (jj_3_21()) {
    jj_scanpos = xsp;
    if (jj_3_22()) {
    jj_scanpos = xsp;
    if (jj_3_23()) {
    jj_scanpos = xsp;
    if (jj_3_24()) {
    jj_scanpos = xsp;
    if (jj_3_25()) return true;
    }
    }
    }
    }
    }
    return false;
  }

  private bool jj_3_34() {
    if (jj_3R_33()) return true;
    return false;
  }

  private bool jj_3_14() {
    if (jj_3R_15()) return true;
    return false;
  }

  private bool jj_3R_39() {
    if (jj_scan_token(ACUTE)) return true;
    Token xsp;
    if (jj_3_46()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_46()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(ACUTE)) return true;
    return false;
  }

  private bool jj_3_33() {
    if (jj_3R_32()) return true;
    return false;
  }

  private bool jj_3_19() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_17()) {
    jj_scanpos = xsp;
    if (jj_3_18()) return true;
    }
    return false;
  }

  private bool jj_3_17() {
    if (jj_3R_19()) return true;
    return false;
  }

  private bool jj_3_13() {
    if (jj_3R_18()) return true;
    return false;
  }

  private bool jj_3_15() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_13()) {
    jj_scanpos = xsp;
    if (jj_3_14()) return true;
    }
    return false;
  }

  private bool jj_3R_31() {
    if (jj_scan_token(MULTIPLY)) return true;
    Token xsp;
    if (jj_3_41()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_41()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(MULTIPLY)) return true;
    return false;
  }

  private bool jj_3R_17() {
    if (jj_scan_token(BLOCK_TITLE)) return true;
    return false;
  }

  private bool jj_3_32() {
    if (jj_3R_31()) return true;
    return false;
  }

  private bool jj_3_36() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_32()) {
    jj_scanpos = xsp;
    if (jj_3_33()) {
    jj_scanpos = xsp;
    if (jj_3_34()) {
    jj_scanpos = xsp;
    if (jj_3_35()) return true;
    }
    }
    }
    return false;
  }

  private bool jj_3_11() {
    if (jj_3R_18()) return true;
    return false;
  }

  private bool jj_3R_35() {
    if (jj_scan_token(HAT)) return true;
    Token xsp;
    if (jj_3_36()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_36()) { jj_scanpos = xsp; break; }
    }
    if (jj_scan_token(HAT)) return true;
    return false;
  }

  private bool jj_3_16() {
    if (jj_3R_17()) return true;
    return false;
  }

  private bool jj_3R_44() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_16()) jj_scanpos = xsp;
    if (jj_3_19()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_19()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private bool jj_3_12() {
    if (jj_3R_17()) return true;
    return false;
  }

  private bool jj_3R_46() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_12()) jj_scanpos = xsp;
    if (jj_3_15()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_15()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private bool jj_3_10() {
    if (jj_3R_17()) return true;
    return false;
  }

  private bool jj_3R_45() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_10()) jj_scanpos = xsp;
    if (jj_3_11()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_11()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private bool jj_3R_43() {
    if (jj_scan_token(CODE_TEXT)) return true;
    return false;
  }

  private bool jj_3R_34() {
    if (jj_scan_token(SAFE_TEXT)) return true;
    return false;
  }

  private bool jj_3R_21() {
    if (jj_3R_45()) return true;
    return false;
  }

  private bool jj_3R_37() {
    if (jj_scan_token(TOPIC_LINK)) return true;
    return false;
  }

  private bool jj_3R_25() {
    if (jj_scan_token(OPEN_BLOCK_FORM)) return true;
    if (jj_3R_45()) return true;
    if (jj_scan_token(CLOSE_BLOCK_FORM)) return true;
    return false;
  }

  private bool jj_3R_32() {
    if (jj_scan_token(LINK)) return true;
    return false;
  }

  private bool jj_3R_22() {
    if (jj_scan_token(OPEN_BLOCK_QUOTE)) return true;
    if (jj_3R_46()) return true;
    if (jj_scan_token(CLOSE_BLOCK_QUOTE)) return true;
    return false;
  }

  private bool jj_3R_30() {
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_3R_42()) return true;
    return false;
  }

  private bool jj_3_56() {
    if (jj_3R_26()) return true;
    return false;
  }

  private bool jj_3R_23() {
    if (jj_scan_token(OPEN_BLOCK_TABLE)) return true;
    if (jj_3R_45()) return true;
    if (jj_scan_token(CLOSE_BLOCK_TABLE)) return true;
    return false;
  }

  private bool jj_3_55() {
    if (jj_3R_34()) return true;
    return false;
  }

  private bool jj_3R_29() {
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(NL)) return true;
    return false;
  }

  private bool jj_3_30() {
    if (jj_3R_30()) return true;
    return false;
  }

  private bool jj_3_9() {
    if (jj_scan_token(0)) return true;
    return false;
  }

  private bool jj_3R_20() {
    if (jj_scan_token(OPEN_BLOCK_CODE)) return true;
    if (jj_3R_44()) return true;
    if (jj_scan_token(CLOSE_BLOCK_CODE)) return true;
    return false;
  }

  private bool jj_3_54() {
    if (jj_3R_35()) return true;
    return false;
  }

  private bool jj_3R_13() {
    if (jj_scan_token(OPEN_HEADING)) return true;
    if (jj_3R_34()) return true;
    if (jj_scan_token(CLOSE_HEADING)) return true;
    if (jj_3R_16()) return true;
    return false;
  }

  private bool jj_3_29() {
    if (jj_3R_29()) return true;
    return false;
  }

  private bool jj_3R_28() {
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(NL)) return true;
    return false;
  }

  private bool jj_3_8() {
    if (jj_3R_16()) return true;
    return false;
  }

  private bool jj_3_53() {
    if (jj_3R_31()) return true;
    return false;
  }

  private bool jj_3R_24() {
    if (jj_scan_token(OPEN_BLOCK_BOX)) return true;
    if (jj_3R_46()) return true;
    if (jj_scan_token(CLOSE_BLOCK_BOX)) return true;
    return false;
  }

  private bool jj_3_52() {
    if (jj_3R_36()) return true;
    return false;
  }

  private bool jj_3_7() {
    if (jj_scan_token(0)) return true;
    return false;
  }

  private bool jj_3_28() {
    if (jj_3R_28()) return true;
    return false;
  }

  private bool jj_3R_41() {
    if (jj_scan_token(GT)) return true;
    return false;
  }

  private bool jj_3R_27() {
    if (jj_scan_token(MULTIPLY)) return true;
    if (jj_3R_42()) return true;
    if (jj_scan_token(NL)) return true;
    return false;
  }

  private bool jj_3R_19() {
    if (jj_3R_43()) return true;
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_8()) {
    jj_scanpos = xsp;
    if (jj_3_9()) return true;
    }
    return false;
  }

  private bool jj_3_49() {
    if (jj_3R_33()) return true;
    return false;
  }

  private bool jj_3_6() {
    if (jj_3R_16()) return true;
    return false;
  }

  private bool jj_3_51() {
    if (jj_3R_39()) return true;
    return false;
  }

  private bool jj_3R_40() {
    if (jj_scan_token(LT)) return true;
    return false;
  }

  private bool jj_3_31() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_27()) {
    jj_scanpos = xsp;
    if (jj_3_28()) {
    jj_scanpos = xsp;
    if (jj_3_29()) {
    jj_scanpos = xsp;
    if (jj_3_30()) return true;
    }
    }
    }
    return false;
  }

  private bool jj_3_27() {
    if (jj_3R_27()) return true;
    return false;
  }

  private bool jj_3_59() {
    if (jj_3R_41()) return true;
    return false;
  }

  private bool jj_3_25() {
    if (jj_3R_25()) return true;
    return false;
  }

  private bool jj_3R_14() {
    Token xsp;
    if (jj_3_31()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_31()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private bool jj_3_58() {
    if (jj_3R_40()) return true;
    return false;
  }

  private bool jj_3_60() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_58()) {
    jj_scanpos = xsp;
    if (jj_3_59()) return true;
    }
    return false;
  }

  private bool jj_3R_38() {
    Token xsp;
    if (jj_3_60()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_60()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private bool jj_3_50() {
    if (jj_3R_38()) return true;
    return false;
  }

  private bool jj_3_57() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_50()) {
    jj_scanpos = xsp;
    if (jj_3_51()) {
    jj_scanpos = xsp;
    if (jj_3_52()) {
    jj_scanpos = xsp;
    if (jj_3_53()) {
    jj_scanpos = xsp;
    if (jj_3_54()) {
    jj_scanpos = xsp;
    if (jj_3_55()) {
    jj_scanpos = xsp;
    if (jj_3_56()) return true;
    }
    }
    }
    }
    }
    }
    return false;
  }

  private bool jj_3R_42() {
    Token xsp;
    if (jj_3_57()) return true;
    while (true) {
      xsp = jj_scanpos;
      if (jj_3_57()) { jj_scanpos = xsp; break; }
    }
    return false;
  }

  private bool jj_3_24() {
    if (jj_3R_24()) return true;
    return false;
  }

  private bool jj_3_48() {
    if (jj_3R_37()) return true;
    return false;
  }

  private bool jj_3R_16() {
    if (jj_scan_token(NL)) return true;
    return false;
  }

  private bool jj_3_45() {
    if (jj_3R_34()) return true;
    return false;
  }

  private bool jj_3R_36() {
    Token xsp;
    xsp = jj_scanpos;
    if (jj_3_47()) {
    jj_scanpos = xsp;
    if (jj_3_48()) {
    jj_scanpos = xsp;
    if (jj_3_49()) return true;
    }
    }
    return false;
  }

  private bool jj_3_47() {
    if (jj_3R_32()) return true;
    return false;
  }

  public WikiParserTokenManager token_source;
  SimpleCharStream jj_input_stream;
  public Token token, jj_nt;
  private Token jj_scanpos, jj_lastpos;
  private long jj_la;
  public bool lookingAhead = false;
  private bool jj_semLA;
  private long jj_gen;
  private long[] jj_la1 = new long[0];
  static private long[] jj_la1_0;
  static private long[] jj_la1_1;
  static private long[] jj_la1_2;
  static private long[] jj_la1_3;
  static WikiParser(){
      jj_la1_init_0();
      jj_la1_init_1();
      jj_la1_init_2();
      jj_la1_init_3();
   }
   private static void jj_la1_init_0() {
      jj_la1_0 = new long[] {};
   }
   private static void jj_la1_init_1() {
      jj_la1_1 = new long[] {};
   }
   private static void jj_la1_init_2() {
      jj_la1_2 = new long[] {};
   }
   private static void jj_la1_init_3() {
      jj_la1_3 = new long[] {};
   }
  private JJCalls[] jj_2_rtns = new JJCalls[60];
  private bool jj_rescan = false;
  private long jj_gc = 0;

  public WikiParser(System.IO.Stream stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new WikiParserTokenManager(jj_input_stream);
    token = new Token();
    token.next = jj_nt = token_source.getNextToken();
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();
  }

  public void ReInit(System.IO.Stream stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    token.next = jj_nt = token_source.getNextToken();
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();
  }

  public WikiParser(System.IO.TextReader stream) {
    jj_input_stream = new SimpleCharStream(stream, 1, 1);
    token_source = new WikiParserTokenManager(jj_input_stream);
    token = new Token();
    token.next = jj_nt = token_source.getNextToken();
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();
  }

  public void ReInit(System.IO.TextReader stream) {
    jj_input_stream.ReInit(stream, 1, 1);
    token_source.ReInit(jj_input_stream);
    token = new Token();
    token.next = jj_nt = token_source.getNextToken();
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();
  }

  public WikiParser(WikiParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    token.next = jj_nt = token_source.getNextToken();
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();
  }

  public void ReInit(WikiParserTokenManager tm) {
    token_source = tm;
    token = new Token();
    token.next = jj_nt = token_source.getNextToken();
    jj_gen = 0;
    for (int i = 0; i < 0; i++) jj_la1[i] = -1;
    for (int i = 0; i < jj_2_rtns.Length; i++) jj_2_rtns[i] = new JJCalls();
  }

  private Token jj_consume_token(int kind){
    Token oldToken = token;
    if ((token = jj_nt).next != null) jj_nt = jj_nt.next;
    else jj_nt = jj_nt.next = token_source.getNextToken();
    if (token.kind == kind) {
      jj_gen++;
      if (++jj_gc > 100) {
        jj_gc = 0;
        for (int i = 0; i < jj_2_rtns.Length; i++) {
          JJCalls c = jj_2_rtns[i];
          while (c != null) {
            if (c.gen < jj_gen) c.first = null;
            c = c.next;
          }
        }
      }
      return token;
    }
    jj_nt = token;
    token = oldToken;
    jj_kind = kind;
    throw generateParseException();
  }

  class LookaheadSuccess : System.Exception{ }
  private LookaheadSuccess jj_ls = new LookaheadSuccess();
  private bool jj_scan_token(int kind) {
    if (jj_scanpos == jj_lastpos) {
      jj_la--;
      if (jj_scanpos.next == null) {
        jj_lastpos = jj_scanpos = jj_scanpos.next = token_source.getNextToken();
      } else {
        jj_lastpos = jj_scanpos = jj_scanpos.next;
      }
    } else {
      jj_scanpos = jj_scanpos.next;
    }
    if (jj_rescan) {
      int i = 0; Token tok = token;
      while (tok != null && tok != jj_scanpos) { i++; tok = tok.next; }
      if (tok != null) jj_add_error_token(kind, i);
    }
    if (jj_scanpos.kind != kind) return true;
    if (jj_la == 0 && jj_scanpos == jj_lastpos) throw jj_ls;
    return false;
  }

  public Token getNextToken() {
    if ((token = jj_nt).next != null) jj_nt = jj_nt.next;
    else jj_nt = jj_nt.next = token_source.getNextToken();
    jj_gen++;
    return token;
  }

  public Token getToken(int index) {
    Token t = lookingAhead ? jj_scanpos : token;
    for (int i = 0; i < index; i++) {
      if (t.next != null) t = t.next;
      else t = t.next = token_source.getNextToken();
    }
    return t;
  }

  private System.Collections.Generic.List<long[]> jj_expentries = new System.Collections.Generic.List<long[]>();
  private long[] jj_expentry;
  private long jj_kind = -1;
  private long[] jj_lasttokens = new long[100];
  private long jj_endpos;

  private void jj_add_error_token(int kind, int pos) {
    if (pos >= 100) return;
    if (pos == jj_endpos + 1) {
      jj_lasttokens[jj_endpos++] = kind;
    } else if (jj_endpos != 0) {
      jj_expentry = new long[jj_endpos];
      for (int i = 0; i < jj_endpos; i++) {
        jj_expentry[i] = jj_lasttokens[i];
      }
      bool exists = false;
      foreach(long[] oldentry in jj_expentries) {
        if (oldentry.Length == jj_expentry.Length) {
          exists = true;
          for (int i = 0; i < jj_expentry.Length; i++) {
            if (oldentry[i] != jj_expentry[i]) {
              exists = false;
              break;
            }
          }
          if (exists) break;
        }
      }
      if (!exists) jj_expentries.Add(jj_expentry);
      if (pos != 0) jj_lasttokens[(jj_endpos = pos) - 1] = kind;
    }
  }

  public ParseException generateParseException() {
    jj_expentries.Clear();
    bool[] la1tokens = new bool[116];
    for (int i = 0; i < 116; i++) {
      la1tokens[i] = false;
    }
    if (jj_kind >= 0) {
      la1tokens[jj_kind] = true;
      jj_kind = -1;
    }
    for (int i = 0; i < 0; i++) {
      if (jj_la1[i] == jj_gen) {
        for (int j = 0; j < 32; j++) {
          if ((jj_la1_0[i] & (1<<j)) != 0) {
            la1tokens[j] = true;
          }
          if ((jj_la1_1[i] & (1<<j)) != 0) {
            la1tokens[32+j] = true;
          }
          if ((jj_la1_2[i] & (1<<j)) != 0) {
            la1tokens[64+j] = true;
          }
          if ((jj_la1_3[i] & (1<<j)) != 0) {
            la1tokens[96+j] = true;
          }
        }
      }
    }
    for (int i = 0; i < 116; i++) {
      if (la1tokens[i]) {
        jj_expentry = new long[1];
        jj_expentry[0] = i;
        jj_expentries.Add(jj_expentry);
      }
    }
    jj_endpos = 0;
    jj_rescan_token();
    jj_add_error_token(0, 0);
    long[][] exptokseq = new long[jj_expentries.Count][];
    for (int i = 0; i < jj_expentries.Count; i++) {
      exptokseq[i] = (long[])jj_expentries[i];
    }
    return new ParseException(token, exptokseq, tokenImage);
  }

  public void enable_tracing() {
  }

  public void disable_tracing() {
  }

  private void jj_rescan_token() {
    jj_rescan = true;
    for (int i = 0; i < 60; i++) {
    try {
      JJCalls p = jj_2_rtns[i];
      do {
        if (p.gen > jj_gen) {
          jj_la = p.arg; jj_lastpos = jj_scanpos = p.first;
          switch (i) {
            case 0: jj_3_1(); break;
            case 1: jj_3_2(); break;
            case 2: jj_3_3(); break;
            case 3: jj_3_4(); break;
            case 4: jj_3_5(); break;
            case 5: jj_3_6(); break;
            case 6: jj_3_7(); break;
            case 7: jj_3_8(); break;
            case 8: jj_3_9(); break;
            case 9: jj_3_10(); break;
            case 10: jj_3_11(); break;
            case 11: jj_3_12(); break;
            case 12: jj_3_13(); break;
            case 13: jj_3_14(); break;
            case 14: jj_3_15(); break;
            case 15: jj_3_16(); break;
            case 16: jj_3_17(); break;
            case 17: jj_3_18(); break;
            case 18: jj_3_19(); break;
            case 19: jj_3_20(); break;
            case 20: jj_3_21(); break;
            case 21: jj_3_22(); break;
            case 22: jj_3_23(); break;
            case 23: jj_3_24(); break;
            case 24: jj_3_25(); break;
            case 25: jj_3_26(); break;
            case 26: jj_3_27(); break;
            case 27: jj_3_28(); break;
            case 28: jj_3_29(); break;
            case 29: jj_3_30(); break;
            case 30: jj_3_31(); break;
            case 31: jj_3_32(); break;
            case 32: jj_3_33(); break;
            case 33: jj_3_34(); break;
            case 34: jj_3_35(); break;
            case 35: jj_3_36(); break;
            case 36: jj_3_37(); break;
            case 37: jj_3_38(); break;
            case 38: jj_3_39(); break;
            case 39: jj_3_40(); break;
            case 40: jj_3_41(); break;
            case 41: jj_3_42(); break;
            case 42: jj_3_43(); break;
            case 43: jj_3_44(); break;
            case 44: jj_3_45(); break;
            case 45: jj_3_46(); break;
            case 46: jj_3_47(); break;
            case 47: jj_3_48(); break;
            case 48: jj_3_49(); break;
            case 49: jj_3_50(); break;
            case 50: jj_3_51(); break;
            case 51: jj_3_52(); break;
            case 52: jj_3_53(); break;
            case 53: jj_3_54(); break;
            case 54: jj_3_55(); break;
            case 55: jj_3_56(); break;
            case 56: jj_3_57(); break;
            case 57: jj_3_58(); break;
            case 58: jj_3_59(); break;
            case 59: jj_3_60(); break;
          }
        }
        p = p.next;
      } while (p != null);
      } catch(LookaheadSuccess ls) { }
    }
    jj_rescan = false;
  }

  private void jj_save(int index, int xla) {
    JJCalls p = jj_2_rtns[index];
    while (p.gen > jj_gen) {
      if (p.next == null) { p = p.next = new JJCalls(); break; }
      p = p.next;
    }
    p.gen = jj_gen + xla - jj_la; p.first = token; p.arg = xla;
  }

  class JJCalls {
    public long gen;
    public Token first;
    public int arg;
    public JJCalls next;
  }

}
}

